import { test, expect } from 'bun:test'
import { blake2b_generator, hash512 } from './harness'
import { random } from 'nanoid'

test('hash512 edges', () => {
	for (let i = 0; i < 1024; i++) {
		const key = random(i == 0 ? 0 : 60)

		const assumed_key = new Uint8Array(64)
		assumed_key.set(key)

		const generator = blake2b_generator(key)
		let initial = hash512(assumed_key)

		// check start
		expect(generator.i32()).toEqual(new Int32Array(initial.buffer, 0, 1)[0])

		// skip over the rest, 60 bytes
		for (let i = 0; i < 60; i++) {
			generator.u8()
		}

		initial = hash512(initial)
		expect(generator.i32()).toEqual(new Int32Array(initial.buffer, 0, 4)[0])
	}
})

// TODO: using 63 bytes of entropy then requesting 4 bytes is an edge case we should test
//       .... we've covered all our bases though, everything here is just assurance

test('generate 4 bytes', () => {
	// NULL
	const values_nokey = [-1246292601, 1232761996, 196768227, -1881229566, -14230987, -1201632724, 667948295, 1646666016, -314658941, 1030240181, 1890667735, 212337030, 1865904281, 1792091666, 1697064188, 710528492, 314255331, 1182507481, -143895805, 639288000, -1973766592, 613725029, -484410821, -1223769904, 1748378483, 1712881470, -225787389, -1959413861, 460801233, 878591802, 1102720438, 1121318042, 1044932808, 1348254971, -689530209, -855352382, -1398532272, 1784660149, -892429628, 1348851404, 197650529, -1179307395, -1498130121, -1042995311, 463153540, -401072268, 268846941, 1964946251, 1519477366, -133196924, -1645618842, -1969870177, 1736048466, -958716368, -968445894, -371443155, 163148605, -1240594173, 806037341, -1276286494, 1156096481, -1900529229, 5173287, 1656111373, -65485383, 1586217835, -510106250, -20713502, -1238844785, -475332921, 931872978, -1856608213, 1625438344, -1023709184, 1019168553, 2054014793, 1572115182, -642311503, 975788505, 1587642499, -2041423212, 1218110582, 602398371, 476887547, 1832558914, -1574872595, -1005308435, -1307174568, -1394623918, -571906383, -1990778425, -1200918527, -2067900576, -1499553155, 2042770813, 1045083184, 1027421905, 1546239292, 1121131617, 911625745, 172212976, 1286698553, -373514228, 728550619, 1648691690, -1957192588, -743268529, -1041824087, -87598421, -794984538, 358186639, 189664882, 1076644604, -793021712, 1991059114, 1066955149, -744233479, 970290820, -1947276655, 200756879, -2047190444, -752555149, -1283232393, -1906891236, -1757882659, 1066613060, -1155163570, 480194688]
	// "the keytime"
	const values_the_key = [-600889981, 87617439, -169677362, -1479420281, -970799588, -1888699117, -23397941, 1223406483, 243294041, 1421014842, -901868156, -1209945778, -2074427904, -886655491, 2090022962, -1671996696, -1733488689, -1587905377, 1402393641, -1256287679, -832088271, 163786060, -1658302426, 204972266, -2042034739, 1497822510, -1193344222, 885052255, 717087622, -348129877, 1126031814, 1909972593, -262343066, 422436650, -116706882, -672642963, 1740063879, 992955096, 1777683105, 2003145224, 1453543030, -760694079, 443067059, 15351225, 129578097, 849463049, 1589985629, 1459009677, -303765691, -1675549719, 494542303, -283704334, -519301027, 92433359, -133737061, 563668047, -1335845773, 832342189, -297895895, 1858809671, 772973481, -1288735117, 795560144, -1612237119, 243902517, -1495549537, 1245412175, 535463509, 119859035, 1848870484, 788966043, 1487768831, 1037598619, 1906579126, -2051026385, 745640038, 357177435, -1392335122, 1681832695, 347280393, 1463428153, -834252889, -989721064, -1604969570, -1098666434, 258341302, -1911852206, 923531381, 783568893, 632992000, -597420788, -229697118, -1457844122, 812874699, 842078184, 941989529, -1129834177, 782822455, -1338859514, -1495992837, -1089605193, -524846493, -1626982241, 691087376, 1306064516, -611665388, -595594821, 758125543, 1974155293, -706572460, 611354578, -1898814353, -1335225290, 644938170, 1045382836, -1575896303, 79195636, -762522476, -144809779, -38808628, 459158700, 2145227623, 1241994419, -2007955061, 504560093, 688774022, 1551703343, -625810583]

	let g = blake2b_generator()
	for (let i = 0; i < 128; i++) {
		expect(g.i32()).toEqual(values_nokey[i])
	}

	g = blake2b_generator(new TextEncoder().encode('the keytime'))
	for (let i = 0; i < 128; i++) {
		expect(g.i32()).toEqual(values_the_key[i])
	}
})
