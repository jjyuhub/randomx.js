import { test, expect } from 'bun:test'
import { random } from 'nanoid'
import { hash256, hash512, long1024 } from './rx_harness'

test('hash256', () => {
	for (let i = 0; i < 1024; i++) {
		const bytes = random(i)
		
		const bun_256 = new Bun.CryptoHasher('blake2b256')
		bun_256.update(bytes)
		const bun_out = bun_256.digest()

		const module_out = Buffer.from(hash256(bytes))

		expect(bun_out).toEqual(module_out)
	}
})

test('hash512', () => {
	for (let i = 0; i < 1024; i++) {
		const bytes = random(i)
		
		const bun_512 = new Bun.CryptoHasher('blake2b512')
		bun_512.update(bytes)
		const bun_out = bun_512.digest()

		const module_out = Buffer.from(hash512(bytes))

		expect(bun_out).toEqual(module_out)
	}
})

test('long1024', () => {
	const hash_data = new TextEncoder().encode('RandomX example input')
	const hash = long1024(hash_data)

	// 1024 bytes
	expect(hash).toEqual(Buffer.from('1d96183cc8c1f8fa4701876ec68b443f1b8add5a35b29cb5f2e5b23f25987d357b041120f09b2e75e3e2b12a08778b09b604591c5637b3b40b8723c3b52df89ed5bc90817f6cc3737b81a51fcfa01d7885bb96882c3895594dc65b3fd9eab5e90b3211bc81e934f35628ad1a727e42718d27bea26ced750878756efe7ce7ebd640dc4b7172b1d3d5e5ca5a1035968424ba5e40f3693c63d9f3d561b59bf5f735d35bbb3399509236605251a36f3641dcef2475e701c92e2a35095b343e6067bd1d16554e08620a041644a636d0331895d1baed182e24182463769f09372a48d6f153e6ef3e506b426dacb426a3139ea3e09ffd0ef888ef3815bfbd60006076c8769323ce7022ce5e7719f6987142fd12b4a49f976adc19bd944e444529503965f00ae76f2e5551d70d95d332b094a93b21fba5ddd764ca0b25448589083c3bba9da49d0797788e264acb654e0f2a31d8831996694b5e649e45dbd8506f6e397e6694e4d4f9ab7cb4523e5f1d63198a05d7c971b3a2f006407f2d7a20b8ee4a59be7ba36800b7d06d97e4b3b861b64575922cd06a227fe5573a446861c45ff60434a44013c1c029abcbfe0b40505236bdf1ee3e5df91140fe6e550c6136ee6eae0d471ebc59993fb00c965a5124353b0591f1c605a8ceb059b43b8ea574d43c89a0d42b451f5efc75790951c4be10c20688ebac5997712c0a8a587034f6d82283b85a3ea887c2f67a3815ed3d27d2c625316330c4d3fe6e3794d1df1c3386e6d7fa2672bb3107678d6f41dd8d9019230a81294a01013a20f3fa0f5ccd795694ec166fbd4cb4b677a6155785c8ce6dbb56d29bd7bc9805906f092f03ce221137b6168f5a4875a1cb6c04bd57c4f9d458b89c5478d2e39963831b05615cec0ae7bfe1670ad91c0120ebc5108cddbda7a9de3091c5c2531959d188fdc5dc574c839f3519746e12e8f30d8b27601032d0eae840c5bc686ec87b598e70f488f43dec8a08c1a1d7c00ee8229e83e76dc48e35179e09bb8a9841327b26ac60028635fe6d0e89daabd3df152e766e3531947e079ef72d7f775aca1abdd491485af951ebd1ccc49dbb9495bc8d10c8bafbbc6247c57c3304faa877aeb4775838081d331c5a48222a3c6cd0ae3be93145eda1941b9473d37aafc39bee1c48e32d836f91bdf5404689635b8ce3db761045917c4f0e3f207e7f33742c24e6640ad03dcd61538b86eb318f0054280cbc7121a2fb2f3736e5925b9e93b59877e55e3123121896469341bfdd1dd672da26bdcb98b826c8a89ce53fa80344c4d9c24ed1c532d1a838ac4d89296b1c2441ad79e5e6e82d7d176c79e02a79dff7b62a6763d1dfb0c106daa7771d4a32ca433f11a1d04a246079c2edb29efc391b1b874cd64bf0d7d88393fabefa271c3d4c33fa119114e43c540aaf85ac394e4698aaf8c1ca77def741', 'hex'))
})
