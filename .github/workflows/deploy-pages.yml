# .github/workflows/test.yml

name: Ubuntu Build, Test, and Deploy Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build-test-deploy:
    name: Build, Test & Deploy on Ubuntu
    runs-on: ubuntu-22.04

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Dependencies (APT, WABT, Bun)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang lld cmake curl wget nodejs npm binaryen tcc

          # Install WABT
          wget https://github.com/WebAssembly/wabt/releases/download/1.0.33/wabt-1.0.33-ubuntu.tar.gz
          tar -xzf wabt-1.0.33-ubuntu.tar.gz
          sudo cp wabt-1.0.33/bin/* /usr/local/bin/

          # Install Bun
          curl -fsSL https://bun.sh/install | bash
          export BUN_INSTALL="$HOME/.bun"
          export PATH="$BUN_INSTALL/bin:$PATH"
          echo "$BUN_INSTALL/bin" >> $GITHUB_PATH

      - name: Patch Makefile to remove -mrelaxed-simd
        run: sed -i 's/-mrelaxed-simd//g' Makefile

      - name: Patch relaxed SIMD intrinsic in semifloat.c
        run: |
          sed -i 's/wasm_f64x2_relaxed_madd(wasm_f64x2_neg(c), b, a)/wasm_f64x2_add(wasm_f64x2_mul(a, b), wasm_f64x2_neg(c))/g' src/jit/stubs/semifloat.c

      - name: Install Node.js dependencies
        run: $HOME/.bun/bin/bun i --verbose

      - name: Build project (patched)
        id: build
        run: |
          echo "Starting build..."
          $HOME/.bun/bin/bun run build
          echo "Build complete."

      - name: Run RandomX example (Single Thread)
        run: node examples/randomx_single.js

      - name: Patch randomx_threaded.js to stop after 10 intervals
        run: |
          echo "Limiting randomx_threaded.js to 10 hashrate prints..."
          sed -i '/let start_time = performance.now()/a\
                    let intervalCount = 0;\
                    const maxIntervals = 10;' examples/randomx_threaded.js
          sed -i '/setInterval(() => {/a\
                    if (++intervalCount >= maxIntervals) process.exit(0);' examples/randomx_threaded.js

      - name: Run RandomX example (Multi Thread)
        run: node examples/randomx_threaded.js

      - name: Run SuperScalarHash example
        run: node examples/superscalarhash.js

      - name: Test Summary
        run: echo "âœ… Build and tests completed successfully."

      - name: Prepare Artifact Directory for Pages
        run: |
          echo "Preparing GitHub Pages artifact..."
          mkdir ./gh-pages-dist
          cp examples/mining/index.html ./gh-pages-dist/
          cp examples/mining/worker.js ./gh-pages-dist/
          if [ -f "pkg-randomx.js/dist/web/index.js" ]; then
            cp pkg-randomx.js/dist/web/index.js ./gh-pages-dist/lib.js
            echo "Copied index.html, worker.js, and lib.js"
          else
            echo "Error: Built library pkg-randomx.js/dist/web/index.js not found! Cannot prepare artifact."
            exit 1
          fi

      - name: Add security headers for SharedArrayBuffer
        run: |
          cat <<EOF > ./gh-pages-dist/_headers
          /*
            Cross-Origin-Opener-Policy: same-origin
            Cross-Origin-Embedder-Policy: require-corp
          EOF

      - name: Show Pages artifact contents before upload
        run: |
          echo "Artifact contents:"
          ls -l ./gh-pages-dist

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './gh-pages-dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
