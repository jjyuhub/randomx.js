name: Build, Test & Deploy to Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test-ubuntu:
    name: Test on Ubuntu
    runs-on: ubuntu-latest
    outputs:
      build-ok: ${{ steps.build.outcome }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Dependencies (APT, Bun, WABT)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang lld cmake curl wget nodejs npm binaryen tcc
          wget https://github.com/WebAssembly/wabt/releases/download/1.0.33/wabt-1.0.33-ubuntu.tar.gz
          tar -xzf wabt-1.0.33-ubuntu.tar.gz
          sudo cp wabt-1.0.33/bin/* /usr/local/bin/
          curl -fsSL https://bun.sh/install | bash
          export BUN_INSTALL="$HOME/.bun"
          export PATH="$BUN_INSTALL/bin:$PATH"
          echo "$BUN_INSTALL/bin" >> $GITHUB_PATH

      - name: Patch Makefile to remove -mrelaxed-simd
        run: sed -i 's/-mrelaxed-simd//g' Makefile

      - name: Patch relaxed SIMD intrinsic in semifloat.c
        run: sed -i 's/wasm_f64x2_relaxed_madd(wasm_f64x2_neg(c), b, a)/wasm_f64x2_add(wasm_f64x2_mul(a, b), wasm_f64x2_neg(c))/g' src/jit/stubs/semifloat.c

      - name: Install Node.js dependencies
        run: bun i --verbose

      - id: build
        name: Build project (patched)
        run: |
          echo "Starting build..."
          bun scripts/build.ts
          echo "Build complete."

      - name: Run RandomX example (Single Thread)
        run: node examples/randomx_single.js

      - name: Patch randomx_threaded.js to stop after 10 intervals
        run: |
          echo "Limiting randomx_threaded.js to 10 prints..."
          sed -i '/let start_time = performance.now()/a let intervalCount = 0;' examples/randomx_threaded.js
          sed -i '/let start_time = performance.now()/a const maxIntervals = 10;' examples/randomx_threaded.js
          sed -i '/setInterval(() => {/a if (++intervalCount >= maxIntervals) process.exit(0);' examples/randomx_threaded.js

      - name: Run RandomX example (Multi Thread)
        run: node examples/randomx_threaded.js

      - name: Run SuperScalarHash example
        run: node examples/superscalarhash.js

      - name: Test Summary
        run: echo "âœ… All tests completed successfully."

  deploy-pages:
    name: Deploy to GitHub Pages
    needs: test-ubuntu
    if: needs.test-ubuntu.outputs.build-ok == 'success'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Bun & esbuild
        run: |
          curl -fsSL https://bun.sh/install | bash
          echo "$HOME/.bun/bin" >> $GITHUB_PATH
          bun add --dev esbuild

      - name: Build WASM & JS
        run: |
          bun i --verbose
          bun scripts/build.ts

      - name: Bundle for Browser
        run: |
          # Bundle your examples/randomx.js + embed any .wasm as data URL
          bun x esbuild examples/randomx.js \
            --bundle \
            --platform=browser \
            --loader:.wasm=dataurl \
            --outfile=docs/randomx.js

      - name: Prepare docs directory
        run: |
          mkdir -p docs
          cp index.html docs/index.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs
