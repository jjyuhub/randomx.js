name: Ubuntu Build and Test

on:
  push: # Run on pushes to any branch
    branches: [ main ]
  pull_request: # Run on pull requests targeting the main branch
    branches: [ main ]
  workflow_dispatch: # Allow manual triggering

jobs:
  test-ubuntu:
    name: Test on Ubuntu
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Dependencies (APT, Homebrew, Bun)
        run: |
          echo "Updating APT and installing core build tools..."
          sudo apt-get update
          sudo apt-get install -y build-essential clang lld cmake curl wget nodejs npm tcc

          echo "Installing wabt and binaryen (WebAssembly tools)..."
          wget https://github.com/WebAssembly/wabt/releases/download/1.0.36/wabt-1.0.36-ubuntu.tar.gz
          tar -xzf wabt-1.0.36-ubuntu.tar.gz
          sudo cp wabt-1.0.36/bin/* /usr/local/bin/

          wget https://github.com/WebAssembly/binaryen/releases/download/version_122/binaryen-version_122-x86_64-linux.tar.gz
          tar -xzf binaryen-version_122-x86_64-linux.tar.gz
          sudo cp binaryen-version_122/bin/* /usr/local/bin/

          echo "Installing Bun via official script..."
          curl -fsSL https://bun.sh/install | bash
          export BUN_INSTALL="$HOME/.bun"
          export PATH="$BUN_INSTALL/bin:$PATH"
          echo "$BUN_INSTALL/bin" >> $GITHUB_PATH

          echo "Verifying installations..."
          which wasm-objdump && wasm-objdump --version
          which wasm-opt && wasm-opt --version
          which clang && clang --version
          which node && node --version
          which bun && bun --version
          which tcc && tcc -v
          nproc

      - name: Install Node.js dependencies
        run: |
          echo "Installing project Node.js dependencies using bun..."
          bun i --verbose
          echo "Dependencies installed."

      - name: Build project
        run: |
          echo "Starting project build..."
          bun scripts/build.ts
          echo "Build complete."

      - name: Run RandomX example (Single Thread)
        run: |
          echo "Running RandomX single-threaded example..."
          node examples/randomx_single.js
          echo "Finished."

      - name: Run RandomX example (Multi Thread)
        run: |
          echo "Running RandomX multi-threaded example..."
          node examples/randomx_threaded.js
          echo "Finished."

      # Optional legacy/main test if needed
      # - name: Run RandomX example (Main)
      #   run: |
      #     node examples/randomx.js

      - name: Run SuperScalarHash example
        run: |
          echo "Running SuperScalarHash example..."
          node examples/superscalarhash.js
          echo "Finished."

      - name: Test summary
        run: echo "âœ… All Ubuntu tests completed successfully."
